import pygame
import time
import random

pygame.init()

white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)
col_final = (238, 200, 172)
width = 700
height = 600
score_box_height = 50

screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Snake Game')

clock = pygame.time.Clock()

snake_block = 10
snake_speed = 15

font_style = pygame.font.SysFont("bahnschrift", 25)
score_font = pygame.font.SysFont("calibri", 35)

def your_score(score):
    value = score_font.render("Score: " + str(score), True, white)
    pygame.draw.rect(screen, black, [0, 0, width, score_box_height])
    screen.blit(value, [20, 10])

def our_snake (snake_block, snake_List):
    for x in snake_List:
        pygame.draw.rect(screen, green, [x[0], x[1], snake_block, snake_block])

def message(msg, color):
    mesg = font_style.render(msg, True, color)
    screen.blit(mesg, [width / 6, height / 3])

def write_score_to_file(score):
    with open("high_scores.txt", "a") as file:
        file.write("Game Score: " + str(score) + "\n")

def gameLoop():
    game_over = False
    game_close = False
    x1 = width / 2
    y1 = height / 2
    x1_change = 0
    y1_change = 0
    snake_List = []
    Length_of_snake = 1

    foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
    foody = round(random.randrange(0, height - snake_block - score_box_height) / 10.0) * 10.0

    while not game_over:

        while game_close:
            screen.fill(black)
            message("Game over! Press 'P' to Play Again or 'Q' to Quit", col_final)
            your_score(Length_of_snake - 1)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        write_score_to_file(Length_of_snake - 1)
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_p:
                        gameLoop()  # Restart game

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                write_score_to_file(Length_of_snake - 1)
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block
                    x1_change = 0

        if x1 >= width or x1 < 0 or y1 >= height - score_box_height or y1 < score_box_height:
            write_score_to_file(Length_of_snake - 1)
            game_close = True

        x1 += x1_change
        y1 += y1_change
        screen.fill(black)

        pygame.draw.rect(screen, red, [foodx, foody, snake_block, snake_block])

        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)

        if len(snake_List) > Length_of_snake:
            del snake_List[0]

        for x in snake_List[:-1]:
            if x == snake_Head:
                write_score_to_file(Length_of_snake - 1)
                game_close = True
        our_snake(snake_block, snake_List)
        your_score(Length_of_snake - 1)
        pygame.display.update()

        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
            foody = round(random.randrange(0, height - snake_block - score_box_height) / 10.0) * 10.0
            Length_of_snake += 1

        clock.tick(snake_speed)

    pygame.quit()
    quit()

gameLoop()
